{"version":3,"sources":["assets\\scripts\\Player.js"],"names":["cc","Class","extends","Component","properties","jumpHeight","jumpDuration","maxMoveSpeed","accel","setJumpAction","jumpUp","moveBy","p","easing","easeCubicActionOut","jumpDown","easeCubicActionIn","repeatForever","sequence","setInputControl","self","systemEvent","on","SystemEvent","EventType","KEY_DOWN","event","keyCode","KEY","a","accleft","d","accright","KEY_UP","onLoad","jumpAction","node","runAction","xSpeed","update","dt","Math","abs","x"],"mappings":";;;;;;AAAAA,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,oBAAW,CADH;AAERC,sBAAa,CAFL;AAGRC,sBAAa,CAHL;AAIRC,eAAM,CAJE,CAID;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbQ,KAHP;AAkBTC,mBAAc,yBAAW;AACrB,YAAIC,SAAOV,GAAGW,MAAH,CAAU,KAAKL,YAAf,EAA4BN,GAAGY,CAAH,CAAK,CAAL,EAAO,KAAKP,UAAZ,CAA5B,EAAqDQ,MAArD,CAA4Db,GAAGc,kBAAH,EAA5D,CAAX;AACA,YAAIC,WAASf,GAAGW,MAAH,CAAU,KAAKL,YAAf,EAA4BN,GAAGY,CAAH,CAAK,CAAL,EAAO,CAAC,KAAKP,UAAb,CAA5B,EAAsDQ,MAAtD,CAA6Db,GAAGgB,iBAAH,EAA7D,CAAb;AACA,eAAOhB,GAAGiB,aAAH,CAAiBjB,GAAGkB,QAAH,CAAYR,MAAZ,EAAmBK,QAAnB,CAAjB,CAAP;AACH,KAtBQ;AAuBTI,qBAAgB,2BAAW;AAC3B,YAAIC,OAAK,IAAT;AACApB,WAAGqB,WAAH,CAAeC,EAAf,CAAkBtB,GAAGuB,WAAH,CAAeC,SAAf,CAAyBC,QAA3C,EAAoD,UAASC,KAAT,EAAe;AAC/D,oBAAOA,MAAMC,OAAb;AACE,qBAAK3B,GAAG4B,GAAH,CAAOC,CAAZ;AACET,yBAAKU,OAAL,GAAa,IAAb;AACA;AACA,qBAAK9B,GAAG4B,GAAH,CAAOG,CAAZ;AACAX,yBAAKY,QAAL,GAAc,IAAd;AACA;AANJ;AAQH,SATD;AAUAhC,WAAGqB,WAAH,CAAeC,EAAf,CAAkBtB,GAAGuB,WAAH,CAAeC,SAAf,CAAyBS,MAA3C,EAAkD,UAASP,KAAT,EAClD;AACI,oBAAOA,MAAMC,OAAb;AACI,qBAAK3B,GAAG4B,GAAH,CAAOC,CAAZ;AACAT,yBAAKU,OAAL,GAAa,KAAb;AACA;AACA,qBAAK9B,GAAG4B,GAAH,CAAOG,CAAZ;AACAX,yBAAKY,QAAL,GAAc,KAAd;AACA;AANJ;AAQH,SAVD;AAUG,KA7CM;AA8CTE,YAAO,kBAAU;AACjB,aAAKC,UAAL,GAAgB,KAAK1B,aAAL,EAAhB;AACA,aAAK2B,IAAL,CAAUC,SAAV,CAAoB,KAAKF,UAAzB;AACA,aAAKL,OAAL,GAAa,KAAb;AACA,aAAKE,QAAL,GAAc,KAAd;AACA,aAAKM,MAAL,GAAa,CAAb;AACA,aAAKnB,eAAL;AACC,KArDQ;AAsDToB,YAAO,gBAASC,EAAT,EAAY;AACf,YAAG,KAAKV,OAAR,EAAgB;AACZ,iBAAKQ,MAAL,IAAe,KAAK9B,KAAL,GAAWgC,EAA1B;AACH,SAFD,MAGK,IAAG,KAAKR,QAAR,EAAiB;AAClB,iBAAKM,MAAL,IAAe,KAAK9B,KAAL,GAAWgC,EAA1B;AACH;AACD,YAAGC,KAAKC,GAAL,CAAS,KAAKJ,MAAd,IAAsB,KAAK/B,YAA9B,EAA2C;AACvC,iBAAK+B,MAAL,GAAY,KAAK/B,YAAL,GAAkB,KAAK+B,MAAvB,GAA8BG,KAAKC,GAAL,CAAS,KAAKJ,MAAd,CAA1C;AAEH,SAAC,KAAKF,IAAL,CAAUO,CAAV,IAAe,KAAKL,MAAL,GAAYE,EAA3B;AAEL;AAlEQ,CAAT","file":"unknown","sourcesContent":["cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        jumpHeight:0,\r\n        jumpDuration:0,\r\n        maxMoveSpeed:0,\r\n        accel:0// foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\nsetJumpAction:function (){\r\n    var jumpUp=cc.moveBy(this.jumpDuration,cc.p(0,this.jumpHeight)).easing(cc.easeCubicActionOut());\r\n    var jumpDown=cc.moveBy(this.jumpDuration,cc.p(0,-this.jumpHeight)).easing(cc.easeCubicActionIn());\r\n    return cc.repeatForever(cc.sequence(jumpUp,jumpDown))\r\n},\r\nsetInputControl:function (){\r\nvar self=this;\r\ncc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN,function(event){\r\n    switch(event.keyCode){\r\n      case cc.KEY.a:\r\n        self.accleft=true;\r\n        break;\r\n        case cc.KEY.d:\r\n        self.accright=true;\r\n        break;\r\n   }\r\n})\r\ncc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP,function(event)\r\n{\r\n    switch(event.keyCode){\r\n        case cc.KEY.a:\r\n        self.accleft=false;\r\n        break;\r\n        case cc.KEY.d:\r\n        self.accright=false;\r\n        break;  \r\n    }\r\n})},\r\nonLoad:function(){\r\nthis.jumpAction=this.setJumpAction();\r\nthis.node.runAction(this.jumpAction);\r\nthis.accleft=false;\r\nthis.accright=false;\r\nthis.xSpeed= 0;\r\nthis.setInputControl();\r\n},\r\nupdate:function(dt){\r\n    if(this.accleft){\r\n        this.xSpeed -= this.accel*dt;\r\n    }\r\n    else if(this.accright){\r\n        this.xSpeed += this.accel*dt;\r\n    }\r\n    if(Math.abs(this.xSpeed)>this.maxMoveSpeed){\r\n        this.xSpeed=this.maxMoveSpeed*this.xSpeed/Math.abs(this.xSpeed);\r\n       \r\n    } this.node.x += this.xSpeed*dt;\r\n    \r\n},\r\n    // use this for initialization\r\n    \r\n\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"]}